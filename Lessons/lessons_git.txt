
hexlet-git$ git branch -M main

 git pull --rebase - перед началом всегда = скачивает из внешнего репозитория новые коммиты и добавляет их в локальный
 
 git add/rm <file>
 git restore <file>

git add, подготавливает изменение к коммиту (а не добавляет файл!),
git rm, которая объединяет в себе удаление и подготовку к коммиту:

-----------------------------------------------------------------
Анализ сделанных изменений
-----------------------------------------------------------------
 git status
 git restore --staged <file>
 
 git diff, которая показывает разницу между тем, что было и что стало:
dif  запускает пейджер. f, для перемещения наверх — u Для выхода из режима просмотра = q.

git diff показывает изменения только для тех модифицированных файлов, которые ещё не были добавлены в индекс. 
git diff --staged посмотреть уже добавленые можно

git log -p   =выводит диф для каждого коммита:
git show 5120bea3    = помощью хеша можно посмотреть все изменения, сделанные в рамках одного коммита:
git blame <путь до файла> =выводит файл и рядом с каждой строкой показывает того, кто её менял и в каком коммите.
git grep line  =ищет совпадение с указанной строкой во всех файлах проекта
git grep -i hexlet   =i позволяет искать без учета регистра
hexlet-git$ git grep Hexlet 5120bea3   =Поиск в конкретном коммите
# Поиск по всей истории
git grep hexlet $(git rev-list --all)    # rev-list возвращает список хешей коммитов

it clean -fd    =Выполняем очистку # -f – force, -d – directory
git restore    =Для отмены изменений

Файлы, добавленные для фиксации
git restore --staged INFO.md   =для перевода изменений в рабочую директорию:

================
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        deleted:    index.html
        new file:   index.md

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   hexlet.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        dir/
--------------
status
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    index.html

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        dir/
        index.md
================
cd code-user/ # Переходим в директорию code-user
git restore hexlet.txt
git restore --staged index.md index.html
git restore index.html
git clean -fd

--dry-run,
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Для отладки публикации не нужно добавлять пакет в основной каталог NPM. На протяжении всего проекта используйте аргумент --dry-run, чтобы не засорять общее хранилище учебными пакетами. Таким способом вы убедитесь, что правильно настроили свой пакет.

Для установки пакета из операционной системы, используйте команду npm link. Её необходимо запускать из корневой директории проекта.


