// 0 cls
console.clear();
//--------------------------------------------------------------------------

console.log(" 1. write HelloWorld");
console.log("Hello, World! from MuSa");

// 2 однострочный коммент
// You know nothing, Jon Snow!
// 2.2 многострочный
/* bla
   bla */
//--------------------------------------------------------------------------

// 3 Выведите на экран друг за другом три имени: Robert, Stannis, Renly.
console.log("Robert");
console.log("Stannis");
console.log("Renly");
//--------------------------------------------------------------------------

// 4 Выведите на экран число 9780262531962.
console.log(9780262531962);
//--------------------------------------------------------------------------

// 5 Выведите на экран What Is Dead May Never Die
// ---> https://repl.it
console.log("What Is Dead May Never Die");
//--------------------------------------------------------------------------

// 6 математические операции
/*
    * — умножение
    / — деление
    - — вычитание
    % — остаток от деления
    ** — возведение в степень
*/
// ---> Деление на ноль — это Infinity (бесконечность).
// Выведите на экран результат деления числа 81 на 9.
console.log(81 / 9);
//--------------------------------------------------------------------------

// 7 разность между числами 6 и -81 и выведет ответ на экран
console.log(6 - -81);
//--------------------------------------------------------------------------

// 8 коммутативным законом.
// операция коммутативная, если поменяв местами операнды,
//  вы получаете тот же результат. например: 3 + 2 = 2 + 3.
// не коммутативная операция вычитания? Конечно, нет: 2 - 3 ≠ 3 - 2.
//считает и выводит последовательно на экран значения следующих математических выражений: «3 в степени 5» и «-8 разделить на -4».
console.log(3 ** 5);
console.log(-8 / -4);
//--------------------------------------------------------------------------

// 9 вычислить и на экран выражения: 8 / 2 + 5 - -3 / 2
console.log(8 / 2 + 5 - -3 / 2);
//--------------------------------------------------------------------------

// 10 Дано вычисление 70 * 3 + 4 / 8 + 2. Расставьте скобки так, чтобы оба сложения (3 + 4) и (8 + 2) высчитывались в первую очередь.
console.log((70 * (3 + 4)) / (8 + 2));
//--------------------------------------------------------------------------

// 11
// Максимальное возможное целое число 9007199254740991
// console.log(Number.MAX_SAFE_INTEGER);
//Вычислите произведение чисел: 0.39 и 0.22
console.log(0.39 * 0.22);
//--------------------------------------------------------------------------

// 12 Бесконечность (Infinity)
console.log((Infinity + Infinity) / 10);
//--------------------------------------------------------------------------

// 13 NaN
console.log(0 / 0);
//--------------------------------------------------------------------------

// 14 Линтер-проверяет код на соответствие стандартам=красивый код
// «разница между пятью в квадрате и произведением трёх и семи». Расставьте скобки таким образом, чтобы не нарушать правило no-mixed-operators.
console.log(5 ** 2 - 3 * 7);
//--------------------------------------------------------------------------

// 15 Кавычки
// 'A' "B" `C`
//  \" -экранирование кавычки,  \ в тексте не выводится
//на экран: "Khal Drogo's favorite word is "athjahakar""
console.log(`"Khal Drogo's favorite word is "athjahakar""`);
console.log('"Khal Drogo\'s favorite word is "athjahakar""');
//--------------------------------------------------------------------------

// 16 Экранирующие последовательности
// перевод строки: \n
//  вывести используя только один console.log()
// - Did Joffrey agree?
// - He did. He also said "I love using \n".
console.log('- Did Joffrey agree?\n- He did. He also said "I love using \\n".');
//--------------------------------------------------------------------------

// 17 Конкатенация - Операция соединения строк
console.log("Winter " + "came " + "for " + "the " + "House " + "of " + "Frey.");
//--------------------------------------------------------------------------

// 18  ASCII или UTF-8.
console.log(String.fromCharCode(126));
console.log(String.fromCharCode(94));
console.log(String.fromCharCode(37));
//Ваше решение: console.log(`~\n`+`^\n`+`%`);
//--------------------------------------------------------------------------

// 19 переменная
// Создайте переменную с именем motto и содержимым What Is Dead May Never Die!. Распечайте содержимое переменной.
let motto = "What Is Dead May Never Die!";
console.log(motto);
//--------------------------------------------------------------------------

// 20 изменение переменной
let name = "Brienna";
name = "anneirB";
//--------------------------------------------------------------------------

// 21 Выбор имени переменной
let x = 2;
let myBrothersCount = 2;
//--------------------------------------------------------------------------

// 22 Ошибки при работе с переменными
/* eslint prefer-const: 0 */

const family = 'Targaryen';
// BEGIN
const pet = 'Dragon';
// END
console.log(family);
console.log('and');
console.log(pet);
//--------------------------------------------------------------------------

//23 Выражения в определениях
/* eslint prefer-const: 0 */
let eurosCount = 100;
// BEGIN
let dollarsPerEuro = 1.25;
let rublesPerDollar = 60;
let dollarsCount = eurosCount * dollarsPerEuro;
console.log(dollarsCount);
let rublesCount = dollarsCount * rublesPerDollar;
console.log(rublesCount);
// END
//--------------------------------------------------------------------------

//24 Переменные и конкатенация
/* eslint prefer-const: 0, prefer-template: 0 */
let info = "We couldn't verify you mother's maiden name.";
let intro = 'Here is important information about your account security.';
let firstName = 'Joffrey';
let greeting = 'Hello';
// BEGIN
let hello = greeting+', '+firstName+'!'; // => Hello, Joffrey!
console.log(hello+'\n'+intro+'\n'+info);
// END
//--------------------------------------------------------------------------

//25 Именование переменных
// BEGIN
let firstNumber = 11;
let secondNumber = -100;
console.log(firstNumber*secondNumber);
// END
//--------------------------------------------------------------------------

//26 Магические числа
let king = 'King Balon the 6th';
// BEGIN
let numberOfCastles = 6;
let roomsPerCastle = 17;
console.log(king + ' has ' + numberOfCastles * roomsPerCastle + ' rooms.');
// END
//--------------------------------------------------------------------------

//27 Константы
const army = 'the white walkers';
console.log(army);
//--------------------------------------------------------------------------

//28 Интерполяция
const stark = 'Arya';
// BEGIN
console.log(`Do you want to eat, ${stark}?`);
// END
//--------------------------------------------------------------------------

//29 Извлечение символов из строки
const name = 'Na\nharis';
// BEGIN
console.log(name[7]);
console.log(name[name.length-1]); // => 's'
// END
//--------------------------------------------------------------------------

//30 Типы данных
JavaScript позволяет узнать тип данных с помощью оператора typeof:
typeof 3; // 'number'
typeof 'Game'; // 'string'
NaN (не число)
-----------
console.log(-0.304);
//--------------------------------------------------------------------------

//31 undefined
undefined, означает отсутствие значения.
let x;
console.log(x);
//--------------------------------------------------------------------------

//32 Неизменяемость примитивных типов
console.log(`${one[2]}${two[1]}${three[3]}${two[4]}${two[2]}`);
console.log(one[2]+two[1]+three[3]+two[4]+two[2]);
//--------------------------------------------------------------------------

//33 Слабая типизация
console.log('7' - (-8 - -2));
//--------------------------------------------------------------------------

//34 Функции и их вызов
Первая строчка в этом коде - импорт функции из другого модуля. 
import { reverse } from 'hexlet-basics/string';
// Вызов функции reverse с аргументом 'Hello!'
const result = reverse('Hello!');
console.log(result); // => '!olleH'
//---
const distanceBetweenTower = calculateDistance('Qarth', 'Vaes Dothrak');
 console.log(distanceBetweenTower);    
//--------------------------------------------------------------------------

//35 Математические функции JavaScript
Math.pow(2, 3); // 8 возведение в степень
Math.abs(-3); // 3 абсолютное значение
console.log(Math.abs(soldiersCount));
//--------------------------------------------------------------------------

//36 Сигнатура функции
Про функцию Math.pow() можно почитать в документации. 
https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Math/pow
Math.ceil() //округление
console.log(Math.ceil(number));
//--------------------------------------------------------------------------

//37 Аргументы по умолчанию
console.log(round(number, 2));
//--------------------------------------------------------------------------

//38 Функции с переменным числом параметров
Math.max(1, 10, 3); // 10
Math.max([value1[, value2[, ...]]])
//---
console.log(Math.min(3, 10, 22, -3, 0));
//--------------------------------------------------------------------------

//39 Вызов функции — выражение
const distance = calculateDistance('Winterfell', 'The Twins') + calculateDistance('The Twins', 'The Eyrie');
console.log(distance);
//--------------------------------------------------------------------------

//40 Аргументы как выражения
const distance = calculateDistanceBetweenTowns(`${from}-${to}`);  // (from+'-'+to)
console.log(distance);
//--------------------------------------------------------------------------

//4 

//--------------------------------------------------------------------------

//4 

//--------------------------------------------------------------------------

//4 

//--------------------------------------------------------------------------

//4 

//--------------------------------------------------------------------------



//79
//Решение учителя:
// BEGIN
const encrypt = (str) => {
  let result = "";
  for (let i = 0; i < str.length; i += 2) {
    const nextSymbol = str[i + 1] || "";
    result = `${result}${nextSymbol}${str[i]}`;
  }

  return result;
};
// END

// export default encrypt; // error in node
//====================
/*
//Ваше решение:
// BEGIN
 const encrypt = (string) => {
  let shifr='';
   for (let i=0; i<string.length; i+=2) {
     if  (i === string.length-1) {
       shifr = `${shifr}${string[i]}`;
       return shifr;  
     }  
   shifr = `${shifr}${string[i+1]}${string[i]}`;
   }
    return shifr;  
 }
 // END

export default encrypt;
//------------------------------------------------------------------------------
*/

console.log("The END");

=================================================================================
   const sum1 = (n) => {
  if (n === 1) {
    return 1;
  }
 
  return n + sum1(n - 1);
};
// можно записать одной стройкой 
const sum2 = n => (n === 1) ? 1 : n + sum2(n - 1);

