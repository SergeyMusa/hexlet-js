


-----------------------------------------------------------------------------

10. Селекторы
==============
Выбор соседнего элемента
.time + .timer {

Родственный селектор- элемент, лежащий на том же уровне.
.time ~ .timer {
---

Селекторы по атрибуту
<section full-screen></section>
-
section[full-screen] {
  width: 100vw;
---
<section full-screen="true"></section>
-
section[full-screen="true"] {
  width: 100vw;
---  
[nm-section^="catalog"]. Такой селектор выберет все элементы с атрибутом nm-section значение которого начинается с catalog.
[nm-section$="catalog"] — вхождение строки в конце значения атрибута.
[nm-section*="catalog"] — вхождение строки в любом месте значения атрибута.

==========================================================================

11.Псевдоклассы
===============
селектор:псевдокласс
a:hover {
  color: #2196f3;
:hover - Для стилизации элемента при наведении используется псевдокласс
:active — Стиль при нажатии на ссылку, но до перехода по ней.
:visited — Стиль уже посещённой ссылки.
:focus — Стиль при событии фокуса на элементе.

<div class="hover square">А я блочный 

Структурные псевдоклассы
------------------------
:nth-child(условие)
---
<section>
  <p>Параграф 1</p>
  <p>Параграф 2</p>
  <p>Параграф 3</p>
</section>
-
section p:nth-child(2) {
  color: #2196f3;
--
:nth-child(2n) — выбрать каждый второй элемент. 2, 4, 6, 8... Число может стоять любое. Если поставить 3n, то будет выбран каждый третий элемент и так далее. Это касается всех последовательностей.
:nth-child(2n + 1) — выбрать каждый второй элемент, начиная c первого. 1, 3, 5, 7, 9...
:nth-child(even) — выбрать все чётные элементы. То же самое, что и :nth-child(2n).
:nth-child(odd) — выбрать все нечётные элементы. То же самое, что и :nth-child(2n + 1).
---

:nth-of-type(условие) -при этом учитывал, на какой позиции они находятся относительно других элементов в блоке.
nth-of-type распознаёт не только позицию элемента, но и его тип
---
стандартных ситуаций существуют специальные псевдоклассы:
:first-child — выбирает первый элемент внутри родителя.
:last-child — выбирает последний элемент внутри родителя.
:first-of-type — выбирает первый элемент внутри родителя учитывая тип элемента.
:last-of-type — выбирает последний элемент внутри родителя учитывая тип элемента.
:only-child — выбирает элемент, если он единственный внутри родителя.

-----------------------------------------------------------------------------

11. Псевдоэлементы
==============

