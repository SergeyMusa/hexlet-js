1.добавить в html
<head >
 <link rel="stylesheet" type="text/css" href="style.css">
--------------------------------------------------------------------
2.размер шрифта
 <p style="font-size: 12px;">mini текст</p>
--------------------------------------------------------------------
3.
<div style= "font-size: 20px; border: solid 1px;">
    У блока появится рамка шириной 1 пиксель
    <p style="font-size: 10px;">А у параграфа отдельной рамки не будет.  Размер шрифта  параграфа 10пх</p>
</div>
--------------------------------------------------------------------
4.отделяем стиль
<style>
  div {font-size: 20px;}
  p {font-size: 10px;}
</style>
<div>
  Этот текст будет с размером шрифта 20 пикселей
  <p>Вложенный параграф будет иметь размер шрифта 10 пикселей</p>
</div>
--------------------------------------------------------------------
5.Базовые стили 
<style>
  h1 {font-size: 20px;}
</style> 
<h1>Zagolovok 20 пикселей</h1> 
--------------------------------------------------------------------
6.Классы
// HTML
<p class="paragraph">Текст нашего параграфа. Именно с помощью класса paragraph в CSS будут устанавливаться свойства для этого блока текста</p>
/* CSS */
.paragraph {
  color: #333333;
  /* Правило color устанавливает цвет текста. В данном случае — это серый цвет со значением #333333 */
}
============
.news { color: #553333; }
<p class="news">Текст нашего параграфа. цвет текста #553333</p>
============
<style>
    .news { color: #553333; }
</style>    
<p class="news">Текст нашего параграфа. цвет текста #553333</p>
--------------------------------------------------------------------
7.Селекторы
<style>
 .text-bold { font-weight: bold; color: #441188;}
  h1 {  font-size: 50px; }  
  #red {  color: red; }
</style>
<p class="text-bold">Жирный текст внутри параграфа</p>
<div class="text-bold">Ещё один текст внутри простого блочного элемента. Так как у него тоже есть класс text-bold, то он будет с жирным начертанием
    <p>div paragraf</p>
    <p id="red">div Красный параграф</p>
</div>
<h1 class="text-bold">Заголовок/h1>
=============
<style>
  #red {  color: red; }
  .bold {  font-weight: bold; }
</style>
<p id="red" class="bold">Красный   параграф & Tолстый параграф</p>
--------------------------------------------------------------------
--------------------------------------------------------------------
8.Цвета
белый обозначается #ffffff, а чёрный #000000.
https://htmlcolorcodes.com/
===========
<style>
  .violet {  color: #9400D3; }
</style>
<p><span class="violet">violet</span> параграф</p>
--------------------------------------------------------------------
9.Выравнивание текста
.left {  text-align: left;}
.center {  text-align: center;}
.right {  text-align: right;}
justify  по ширине
<p class="left">Текст по левому краю</p>
===========
<style>
  .important {   text-align: center; }
</style>
<p class="important">center параграф</p>
--------------------------------------------------------------------
10.Размер шрифта
.warning {  font-size: 24px;}
=========
<style>
  .big {  font-size: 60px; }
</style>
<p class="big">big параграф</p>
--------------------------------------------------------------------
11.Насыщенность шрифта
.bold {  font-weight: bold;}
400 — normal
700 — bold
значения свойства font-weight могут использоваться 100, 200, 300, 400, 500, 600, 700, 800, 900
для большинства стандартных шрифтов значения от 100 до 500 будут приравнены к normal, а от 600 до 900 к bold.
==========
<style>
  .weight {  font-weight: bold; }
</style>
<p class="weight">weight-bold параграф</p>
--------------------------------------------------------------------
12.Курсив
.italic {  font-style: italic;}
normal — обычный вывод текста.
italic — курсивное начертание
oblique — косое начертание
=========
<style>
  .italic-type {  font-style: oblique; }
</style>
<p class="italic-type">italic-type параграф</p>
--------------------------------------------------------------------
13.Капитель— вид строчных букв, размер которых совпадает c размером заглавных букв
font-variant
ormal — нормальное написание текста
small-caps — капитель
==========
<style>
  .small-capitals {  font-variant: small-caps ; }
</style>
<p class="small-capitals">small-caps  параграф</p>
--------------------------------------------------------------------
14.Горизонтальная черта
text-decoration
underline — Подчёркивание текста
line-through — Перечёркивание текста
overline — Надчёркивание текста
отменить подчёркивание у ссылок используется значение text-decoration: none;
==========
<style>
  .line{  text-decoration: underline  ; }
</style>
<p class="line">Подчёркивание текста</p>
--------------------------------------------------------------------
15.Межстрочный интервал
line-height
==========

--------------------------------------------------------------------
16.

==========

--------------------------------------------------------------------
17.

==========

--------------------------------------------------------------------
18.

==========

--------------------------------------------------------------------
19.

==========

--------------------------------------------------------------------
20.

==========

--------------------------------------------------------------------
21.

==========
====================================================================
изображения
max-width — максимальная ширина элемента. Указав значение в 100%, вы запретите элементу занимать ширину больше своего родителя.
height — высота. Часто выставляют значение auto. Это позволит сохранить правильные пропорции.
---
img {
  max-width: 100%;
  height: auto; }
---------
небольшой отступ между картинкой и нижней границей блока. 
vertical-align,  По умолчанию оно имеет значение baseline. 
достаточно указать middle для свойства vertical-align у изображения.
---
img {
  max-width: 100%;
  height: auto;

  vertical-align: middle;
}
---------------------
Для указания нескольких вариантов изображения используется тег <picture>
---
Внутри <picture>тег <img>. Это основное изображение, если другие варианты не подходят.
В  теге <source> лежат другие варианты изображений. 
<picture>
    <source media="(min-width: 1024px)" srcset="https://www.fillmurray.com/1280/500">
    <source media="(min-width: 700px)" srcset="https://www.fillmurray.com/700/360">

    <img src="https://www.fillmurray.com/500/360" alt="Bill Murray">
  </picture>

====================================================================
Таблицы
Лучший вариант — использование CSS. Так все стили в одном месте, и не будет нужды вспоминать об атрибутах.
---
table,
tr,
td {
  border: 1px solid #000;
}
--------
Для выравнивания по вертикали используется свойство vertical-align
-baseline — выравнивание по базовой линии шрифта. 
-top —  по верхнему краю ячейки.
-middle —  по центру. Стандартное поведение для контента внутри ячеек.
-bottom —  по нижнему краю ячейки.
---
.vertical-top {
  vertical-align: top;
---------------
надо делать все в разных тегах, чтобы понимать потом(caption, thead, tbody, top и тд)

<table>
  <caption>Профессии</caption>
  <thead>
    <tr>
      <th>№</th>
      <th>Название профессии</th>
      <th>Описание</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>Фронтенд-программист</td>
      <td>JavaScript — язык программирования фронтенд-разработки. С его помощью программисты делают сайты динамичными и «живыми». Самый востребованный и наиболее простой язык для новичков.</td>
    </tr>
  </tbody>
</table>
-----------
colspan — объединение столбцов.
rowspan — объединения строк.
<td colspan="3"> — ячейка должна занять пространство трёх столбцов.
====================================================================
Колонки

<article class="columns-2">
  <p>David Bowie,  was not eclectic—he admired Anthony Newley and Jacques Brel and studied mime with Lindsay Kemp).</p>
</article>
----
.columns-2 {
 
 количество 
  column-count: 2;
 
 отступы между колонками можно с помощью свойства column-gap
  column-gap: 30px;
 
 оптимальная ширина 
  column-width: 250px;
---
границы  column-rule, которое является краткой записью следующих свойств:
   column-rule-width — ширина границы.
   column-rule-style — тип границы. Значения совпадают со значениями свойства border.
   column-rule-color — цвет границы.
  column-rule: 2px solid black;
  column-width: 250px;
---
Для разделения колонок  column-span:
none — значение по-умолчанию. Текст находится просто внутри колонок.
all — текст «выходит из колонки» и разделяет их.
h2 {
  text-align: center;
  column-span: all;
---
Перенос колонок
 break-before
 break-after
 break-inside
avoid, которое запрещает перенос.
figure {
  border: 1px solid;
  break-inside: avoid;
---


--------------------------------------------------------------------
--------------------------------------------------------------------

красивые заглавные буквы
--------------------------------------------------------------------
<!DOCTYPE HTML>
<html>
 <head>
  <meta charset="utf-8">
  <title>Тег SPAN</title>
  <style>
    body { 
     font-family: Arial, sans-serif; /* Рубленый шрифт */ 
    }
    .letter { 
     color: red; /* Красный цвет символов */ 
     font-size: 200%; /* Размер шрифта в процентах */ 
     font-family: serif; /* Шрифт с засечками */ 
     position: relative; /* Относительное позиционирование */ 
     top: 5px; /* Сдвиг сверху */ 
    }
  </style> 
 </head>
 <body>

  <p><span class="letter">Р</span>азумные люди приспосабливаются к окружающему миру. 
  Неразумные люди приспосабливают мир к себе. Вот почему прогресс определяется 
  действиями неразумных людей.</p> 
  <p>Бернард Шоу</p>
 
 </body>
</html>
